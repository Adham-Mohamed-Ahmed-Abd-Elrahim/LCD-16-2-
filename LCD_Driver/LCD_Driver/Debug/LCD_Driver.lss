
LCD_Driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001b6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  000001b6  0000022a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000232  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000264  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  000002a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a98  00000000  00000000  00000328  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000719  00000000  00000000  00000dc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000477  00000000  00000000  000014d9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000f0  00000000  00000000  00001950  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003ab  00000000  00000000  00001a40  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003b0  00000000  00000000  00001deb  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000070  00000000  00000000  0000219b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 eb       	ldi	r30, 0xB6	; 182
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 36       	cpi	r26, 0x68	; 104
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 ca 00 	call	0x194	; 0x194 <main>
  7a:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <hardware_ini>:
 * Created: 20/09/2020 06:43:49
 *  Author: ADHM
 */ 
#include "HARDWARE.h"
void hardware_ini()
{ USED_PORT=0xff;
  82:	8f ef       	ldi	r24, 0xFF	; 255
  84:	8a bb       	out	0x1a, r24	; 26
 DDRD|=0xE0;
  86:	81 b3       	in	r24, 0x11	; 17
  88:	80 6e       	ori	r24, 0xE0	; 224
  8a:	81 bb       	out	0x11, r24	; 17
  8c:	08 95       	ret

0000008e <lcd_send_command>:
	
}
void lcd_clear()
{
	lcd_send_command(CLEAR);
	lcd_send_command(HOME);
  8e:	8b bb       	out	0x1b, r24	; 27
  90:	95 98       	cbi	0x12, 5	; 18
  92:	96 98       	cbi	0x12, 6	; 18
  94:	97 9a       	sbi	0x12, 7	; 18
  96:	8f ec       	ldi	r24, 0xCF	; 207
  98:	97 e0       	ldi	r25, 0x07	; 7
  9a:	01 97       	sbiw	r24, 0x01	; 1
  9c:	f1 f7       	brne	.-4      	; 0x9a <lcd_send_command+0xc>
  9e:	00 c0       	rjmp	.+0      	; 0xa0 <lcd_send_command+0x12>
  a0:	00 00       	nop
  a2:	97 98       	cbi	0x12, 7	; 18
  a4:	8f e9       	ldi	r24, 0x9F	; 159
  a6:	9f e0       	ldi	r25, 0x0F	; 15
  a8:	01 97       	sbiw	r24, 0x01	; 1
  aa:	f1 f7       	brne	.-4      	; 0xa8 <lcd_send_command+0x1a>
  ac:	00 c0       	rjmp	.+0      	; 0xae <lcd_send_command+0x20>
  ae:	00 00       	nop
  b0:	08 95       	ret

000000b2 <lcd_ini>:
  b2:	0e 94 41 00 	call	0x82	; 0x82 <hardware_ini>
  b6:	8f e2       	ldi	r24, 0x2F	; 47
  b8:	95 e7       	ldi	r25, 0x75	; 117
  ba:	01 97       	sbiw	r24, 0x01	; 1
  bc:	f1 f7       	brne	.-4      	; 0xba <lcd_ini+0x8>
  be:	00 c0       	rjmp	.+0      	; 0xc0 <lcd_ini+0xe>
  c0:	00 00       	nop
  c2:	88 e3       	ldi	r24, 0x38	; 56
  c4:	0e 94 47 00 	call	0x8e	; 0x8e <lcd_send_command>
  c8:	8e e0       	ldi	r24, 0x0E	; 14
  ca:	0e 94 47 00 	call	0x8e	; 0x8e <lcd_send_command>
  ce:	81 e0       	ldi	r24, 0x01	; 1
  d0:	0e 94 47 00 	call	0x8e	; 0x8e <lcd_send_command>
  d4:	82 e0       	ldi	r24, 0x02	; 2
  d6:	0e 94 47 00 	call	0x8e	; 0x8e <lcd_send_command>
  da:	08 95       	ret

000000dc <lcd_send_data>:
  dc:	8b bb       	out	0x1b, r24	; 27
  de:	95 9a       	sbi	0x12, 5	; 18
  e0:	96 98       	cbi	0x12, 6	; 18
  e2:	97 9a       	sbi	0x12, 7	; 18
  e4:	8f ec       	ldi	r24, 0xCF	; 207
  e6:	97 e0       	ldi	r25, 0x07	; 7
  e8:	01 97       	sbiw	r24, 0x01	; 1
  ea:	f1 f7       	brne	.-4      	; 0xe8 <lcd_send_data+0xc>
  ec:	00 c0       	rjmp	.+0      	; 0xee <lcd_send_data+0x12>
  ee:	00 00       	nop
  f0:	97 98       	cbi	0x12, 7	; 18
  f2:	8f e9       	ldi	r24, 0x9F	; 159
  f4:	9f e0       	ldi	r25, 0x0F	; 15
  f6:	01 97       	sbiw	r24, 0x01	; 1
  f8:	f1 f7       	brne	.-4      	; 0xf6 <lcd_send_data+0x1a>
  fa:	00 c0       	rjmp	.+0      	; 0xfc <lcd_send_data+0x20>
  fc:	00 00       	nop
  fe:	08 95       	ret

00000100 <lcd_send_string>:
 100:	ef 92       	push	r14
 102:	ff 92       	push	r15
 104:	0f 93       	push	r16
 106:	1f 93       	push	r17
 108:	cf 93       	push	r28
 10a:	df 93       	push	r29
 10c:	8c 01       	movw	r16, r24
 10e:	7c 01       	movw	r14, r24
 110:	c0 e0       	ldi	r28, 0x00	; 0
 112:	d0 e0       	ldi	r29, 0x00	; 0
 114:	06 c0       	rjmp	.+12     	; 0x122 <lcd_send_string+0x22>
 116:	f7 01       	movw	r30, r14
 118:	81 91       	ld	r24, Z+
 11a:	7f 01       	movw	r14, r30
 11c:	0e 94 6e 00 	call	0xdc	; 0xdc <lcd_send_data>
 120:	21 96       	adiw	r28, 0x01	; 1
 122:	f8 01       	movw	r30, r16
 124:	01 90       	ld	r0, Z+
 126:	00 20       	and	r0, r0
 128:	e9 f7       	brne	.-6      	; 0x124 <lcd_send_string+0x24>
 12a:	31 97       	sbiw	r30, 0x01	; 1
 12c:	e0 1b       	sub	r30, r16
 12e:	f1 0b       	sbc	r31, r17
 130:	ce 17       	cp	r28, r30
 132:	df 07       	cpc	r29, r31
 134:	80 f3       	brcs	.-32     	; 0x116 <lcd_send_string+0x16>
 136:	df 91       	pop	r29
 138:	cf 91       	pop	r28
 13a:	1f 91       	pop	r17
 13c:	0f 91       	pop	r16
 13e:	ff 90       	pop	r15
 140:	ef 90       	pop	r14
 142:	08 95       	ret

00000144 <lcd_place_write>:
	
}
void lcd_place_write(const char * word,uint8_t row,uint8_t col)
{switch(row)
 144:	0f 93       	push	r16
 146:	1f 93       	push	r17
 148:	cf 93       	push	r28
 14a:	df 93       	push	r29
 14c:	8c 01       	movw	r16, r24
 14e:	d4 2f       	mov	r29, r20
 150:	66 23       	and	r22, r22
 152:	19 f0       	breq	.+6      	; 0x15a <lcd_place_write+0x16>
 154:	61 30       	cpi	r22, 0x01	; 1
 156:	39 f0       	breq	.+14     	; 0x166 <lcd_place_write+0x22>
 158:	0a c0       	rjmp	.+20     	; 0x16e <lcd_place_write+0x2a>
	{case (0):	lcd_send_command(C_FIRST_LINE);break;
 15a:	80 e8       	ldi	r24, 0x80	; 128
 15c:	0e 94 47 00 	call	0x8e	; 0x8e <lcd_send_command>
     case (1): 	lcd_send_command(C_SECOND_LINE);break;
	default:lcd_send_command(C_FIRST_LINE);break;
	}
	for(uint8_t i=0;i<col;i++)
 160:	d1 11       	cpse	r29, r1
 162:	09 c0       	rjmp	.+18     	; 0x176 <lcd_place_write+0x32>
 164:	0f c0       	rjmp	.+30     	; 0x184 <lcd_place_write+0x40>
	
}
void lcd_place_write(const char * word,uint8_t row,uint8_t col)
{switch(row)
	{case (0):	lcd_send_command(C_FIRST_LINE);break;
     case (1): 	lcd_send_command(C_SECOND_LINE);break;
 166:	80 ec       	ldi	r24, 0xC0	; 192
 168:	0e 94 47 00 	call	0x8e	; 0x8e <lcd_send_command>
 16c:	f9 cf       	rjmp	.-14     	; 0x160 <lcd_place_write+0x1c>
	default:lcd_send_command(C_FIRST_LINE);break;
 16e:	80 e8       	ldi	r24, 0x80	; 128
 170:	0e 94 47 00 	call	0x8e	; 0x8e <lcd_send_command>
 174:	f5 cf       	rjmp	.-22     	; 0x160 <lcd_place_write+0x1c>
	}
	for(uint8_t i=0;i<col;i++)
 176:	c0 e0       	ldi	r28, 0x00	; 0
	{
	lcd_send_command(C_RIGHT);
 178:	84 e1       	ldi	r24, 0x14	; 20
 17a:	0e 94 47 00 	call	0x8e	; 0x8e <lcd_send_command>
{switch(row)
	{case (0):	lcd_send_command(C_FIRST_LINE);break;
     case (1): 	lcd_send_command(C_SECOND_LINE);break;
	default:lcd_send_command(C_FIRST_LINE);break;
	}
	for(uint8_t i=0;i<col;i++)
 17e:	cf 5f       	subi	r28, 0xFF	; 255
 180:	dc 13       	cpse	r29, r28
 182:	fa cf       	rjmp	.-12     	; 0x178 <lcd_place_write+0x34>
	{
	lcd_send_command(C_RIGHT);
	}
	lcd_send_string(word);
 184:	c8 01       	movw	r24, r16
 186:	0e 94 80 00 	call	0x100	; 0x100 <lcd_send_string>
}
 18a:	df 91       	pop	r29
 18c:	cf 91       	pop	r28
 18e:	1f 91       	pop	r17
 190:	0f 91       	pop	r16
 192:	08 95       	ret

00000194 <main>:

#include <avr/io.h>


int main(void)
{lcd_ini();
 194:	0e 94 59 00 	call	0xb2	; 0xb2 <lcd_ini>
	lcd_send_string("adham");
 198:	80 e6       	ldi	r24, 0x60	; 96
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	0e 94 80 00 	call	0x100	; 0x100 <lcd_send_string>
	//second line at col 9
	lcd_place_write("t",1,9);
 1a0:	49 e0       	ldi	r20, 0x09	; 9
 1a2:	50 e0       	ldi	r21, 0x00	; 0
 1a4:	61 e0       	ldi	r22, 0x01	; 1
 1a6:	70 e0       	ldi	r23, 0x00	; 0
 1a8:	86 e6       	ldi	r24, 0x66	; 102
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	0e 94 a2 00 	call	0x144	; 0x144 <lcd_place_write>
 1b0:	ff cf       	rjmp	.-2      	; 0x1b0 <main+0x1c>

000001b2 <_exit>:
 1b2:	f8 94       	cli

000001b4 <__stop_program>:
 1b4:	ff cf       	rjmp	.-2      	; 0x1b4 <__stop_program>
